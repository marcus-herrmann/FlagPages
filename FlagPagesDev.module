<?php

class FlagPagesDev extends WireData implements Module {

	public static function getModuleInfo() {
		return array(
			"title" => "FlagPages",
			"version" => 001,
			"summary" => "Lets logged in user flag your content",
			"autoload" => false,
			"singular" => true
		);
	}

	public function install() {

		/*
		 * Create flaggedpages field and assign it to user template
		 */

		$f = new Field();
		$f->type = $this->modules->get("FieldtypePage");
		$f->name = "flaggedpages";
		$f->label = "Flagged Pages";
		$f->description = "References to flagged pages ";
		$f->save();

		$fg = $this->fieldgroups->get('user');
		$fg->add($f);
		$fg->save();

		$this->message("Module is installed");

	}

	public function uninstall() {

		/*
 		* Delete flaggedpages field
 		*/

		$fp = $this->fields->get("flaggedpages");
		$fg = $this->fieldgroups->get('user');
		$fg->remove($fp);
		$fg->save();
		//$fp->delete(); @TODO delete flaggedpages completely

		$this->message("Module is uninstalled");
	}



	public function renderLink($labelAdd, $labelRemove) {

		$user = $this->user;
		$input = $this->input;
		$page = $this->page;
		$pages = $this->pages;

		if ($user->isLoggedin()) {

			$userFlaggedPages = $this->user->flaggedpages;

			$label = ($userFlaggedPages->has($page) ? $labelRemove : $labelAdd);

			echo "<a href='{$page->url}?flag={$page->id}'>{$label}</a>";


			if ($input->get) {
				$p = $input->get("flag");

				$user->setOutputFormatting(false);

				if ($userFlaggedPages->has($pages->get($p))) {
					$userFlaggedPages->remove($pages->get($p));
				} else {
					$userFlaggedPages->add($pages->get($p));
				}

				$user->save();
			}
		}
	}

	public function listFlaggedPages() {}

	public function init() {
	}

}
