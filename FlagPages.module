<?php

class FlagPages extends WireData implements Module {

	public static function getModuleInfo() {
		return array(
			"title" => "FlagPages",
			"version" => 001,
			"summary" => "Lets logged in user flag your content",
			"autoload" => false,
			"singular" => true
		);
	}

	public function install() {

		/*
		 * Create flaggedpages field and assign it to user template
		 */

		$f = new Field();
		$f->type = $this->modules->get("FieldtypePage");
		$f->name = "flaggedpages";
		$f->label = "Flagged Pages";
		$f->description = "References to flagged pages ";
		$f->save();

		$fg = $this->fieldgroups->get('user');
		$fg->add($f);
		$fg->save();

		$this->message("Module is installed");

	}

	public function uninstall() {

		/*
 		* Delete flaggedpages field
 		*/

		$fp = $this->fields->get("flaggedpages");
		$fg = $this->fieldgroups->get('user');
		$fg->remove($fp);
		$fg->save();
		//$fp->delete(); @TODO delete flaggedpages completely

		$this->message("Module is uninstalled");
	}

	public function init() {
		$this->addHookAfter('Page::render', $this, 'example2');
	}

	public function renderFlagLink($page, $labelAdd, $labelRemove) {

		$user = $this->user;

		if ($user->isLoggedin()) {

			$userFlaggedPages = $this->user->flaggedpages;

			$label = ($userFlaggedPages->has($page) ? $labelRemove : $labelAdd);

			echo "<a href='{$page->url}?p={$page->id}&u={$user->id}'>{$label}</a>";

		}
	}

	public function example2($event) {

		$page = $event->object;

		// don't add this to the admin pages
		if($page->template == 'admin') return;

		if ($input->get) {
			$event->return = str_replace("</body>", "<p>Es gibt was in der URL!</p></body>", $event->return);
		};

	//		$user->setOutputFormatting(false);
	//
	//		if ($userBookmarks->has($page)) {
	//			$userBookmarks->remove($page);
	//		} else {
	//			$userBookmarks->add($page);
	//		}
	//
	//		$user->save();
	//		$session->redirect($page->url);


	}

}
